name: "[LEGACY] Frontend Deploy to GCP"

# LEGACY WORKFLOW - DISABLED
# This workflow has been replaced by core-cluster-deploy.yml
on:
  workflow_dispatch:  # Manual trigger only
  # push:
  #   branches: [ main ]
  #   paths:
  #     - 'frontend/**'
  #     - '.github/workflows/frontend-deploy.yml'

env:
  PROJECT_ID: ${{ secrets.GCP_PROJECT_ID }}
  GKE_CLUSTER: autopilot-cluster-1
  GKE_REGION: us-central1
  DEPLOYMENT_NAME: smart-factory-frontend
  IMAGE: smart-factory-frontend

jobs:
  build-and-deploy:
    name: Build and Deploy Frontend
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend
    
    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Set up Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'

    - name: Install dependencies
      run: npm install --legacy-peer-deps

    - name: Run lint
      run: npm run lint

    - name: Run tests
      run: npm test

    - name: Build project
      run: npm run build

    - name: Setup Google Cloud CLI
      uses: google-github-actions/setup-gcloud@v2
      with:
        service_account_key: ${{ secrets.GCP_SA_KEY }}
        project_id: ${{ secrets.GCP_PROJECT_ID }}
        export_default_credentials: true

    - name: Install gke-gcloud-auth-plugin
      run: gcloud components install gke-gcloud-auth-plugin --quiet

    - name: Activate service account
      run: |
        echo '${{ secrets.GCP_SA_KEY }}' > ${HOME}/gcp-key.json
        gcloud auth activate-service-account --key-file=${HOME}/gcp-key.json
          
    - name: Set active gcloud account
      run: |
        gcloud config set account ${{ fromJson(secrets.GCP_SA_KEY).client_email }}

    - name: Configure Docker to use gcloud as a credential helper
      run: |-
        gcloud --quiet auth configure-docker

    - name: Get the GKE credentials so we can deploy to the cluster
      run: |-
        gcloud container clusters get-credentials "$GKE_CLUSTER" --region "$GKE_REGION"

    - name: Build Docker image
      run: |-
        docker build -t "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA" .

    - name: Publish Docker image to GCR
      run: |-
        docker push "gcr.io/$PROJECT_ID/$IMAGE:$GITHUB_SHA"

    - name: Deploy frontend to GKE
      run: |-
        # 프론트엔드 배포 설정 파일 사용
        cd ../backend
        
        # 이미지 태그 업데이트
        sed -i "s|gcr.io/PROJECT_ID/smart-factory-frontend|gcr.io/$PROJECT_ID/$IMAGE|g" k8s/frontend-apps.yaml
        sed -i "s|smart-factory-frontend:latest|smart-factory-frontend:$GITHUB_SHA|g" k8s/frontend-apps.yaml
        
        # 프론트엔드 배포
        kubectl apply -f k8s/frontend-apps.yaml
        
        # 롤아웃 상태 확인
        kubectl rollout status deployment/$DEPLOYMENT_NAME -n smart-factory

    - name: Verify deployment
      run: |-
        kubectl get services -o wide -n smart-factory
        kubectl get pods -l app=smart-factory-frontend -n smart-factory
        
        # 프론트엔드 로그 확인
        echo "=== 프론트엔드 로그 ==="
        gcloud logging read "resource.type=k8s_container AND resource.labels.cluster_name=autopilot-cluster-1 AND resource.labels.namespace_name=smart-factory AND resource.labels.container_name=frontend" --limit 10 --format=json
 