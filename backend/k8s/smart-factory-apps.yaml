apiVersion: v1
kind: Service
metadata:
  name: smart-factory-backend
  namespace: smart-factory
  labels:
    app: smart-factory-backend
spec:
  ports:
  - port: 8000
    targetPort: 8000
    name: http
  selector:
    app: smart-factory-backend
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: smart-factory-backend
  namespace: smart-factory
  labels:
    app: smart-factory-backend
spec:
  replicas: 1
  selector:
    matchLabels:
      app: smart-factory-backend
  template:
    metadata:
      labels:
        app: smart-factory-backend
    spec:
      containers:
      - name: backend
        image: gcr.io/PROJECT_ID/smart-factory-backend:latest
        ports:
        - containerPort: 8000
        env:
        - name: DATABASE_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@timescaledb:5432/$(POSTGRES_DB)"
        - name: TIMESCALE_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@timescaledb:5432/$(POSTGRES_DB)"
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: smart-factory-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: smart-factory-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: smart-factory-secrets
              key: POSTGRES_DB
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            secretKeyRef:
              name: smart-factory-secrets
              key: KAFKA_BOOTSTRAP_SERVERS
              optional: true
        - name: AI_MODEL_SERVICE_ENDPOINT
          valueFrom:
            secretKeyRef:
              name: smart-factory-secrets
              key: AI_MODEL_SERVICE_ENDPOINT
              optional: true
        - name: SECRET_KEY
          valueFrom:
            secretKeyRef:
              name: smart-factory-secrets
              key: SECRET_KEY
              optional: false
        envFrom:
        - configMapRef:
            name: smart-factory-config
        - configMapRef:
            name: app-config
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
        livenessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          httpGet:
            path: /health
            port: 8000
          initialDelaySeconds: 20
          periodSeconds: 5


---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: data-collector
  namespace: smart-factory
  labels:
    app: data-collector
spec:
  replicas: 1
  selector:
    matchLabels:
      app: data-collector
  template:
    metadata:
      labels:
        app: data-collector
    spec:
      containers:
      - name: data-collector
        image: gcr.io/PROJECT_ID/smart-factory-backend:latest
        command: ["python", "-m", "app.services.data_collector"]
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            secretKeyRef:
              name: smart-factory-secrets
              key: KAFKA_BOOTSTRAP_SERVERS
              optional: true
        envFrom:
        - configMapRef:
            name: smart-factory-config
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: kafka-timescale-sink
  namespace: smart-factory
  labels:
    app: kafka-timescale-sink
spec:
  replicas: 1
  selector:
    matchLabels:
      app: kafka-timescale-sink
  template:
    metadata:
      labels:
        app: kafka-timescale-sink
    spec:
      containers:
      - name: kafka-timescale-sink
        image: gcr.io/PROJECT_ID/smart-factory-backend:latest
        command: ["python", "-m", "app.services.kafka_timescale_sink"]
        env:
        - name: POSTGRES_USER
          valueFrom:
            secretKeyRef:
              name: smart-factory-secrets
              key: POSTGRES_USER
        - name: POSTGRES_PASSWORD
          valueFrom:
            secretKeyRef:
              name: smart-factory-secrets
              key: POSTGRES_PASSWORD
        - name: POSTGRES_DB
          valueFrom:
            secretKeyRef:
              name: smart-factory-secrets
              key: POSTGRES_DB
        - name: TIMESCALE_URL
          value: "postgresql://$(POSTGRES_USER):$(POSTGRES_PASSWORD)@timescaledb:5432/$(POSTGRES_DB)"
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            secretKeyRef:
              name: smart-factory-secrets
              key: KAFKA_BOOTSTRAP_SERVERS
              optional: true
        envFrom:
        - configMapRef:
            name: smart-factory-config
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: sensor-simulator
  namespace: smart-factory
  labels:
    app: sensor-simulator
spec:
  replicas: 1
  selector:
    matchLabels:
      app: sensor-simulator
  template:
    metadata:
      labels:
        app: sensor-simulator
    spec:
      containers:
      - name: sensor-simulator
        image: gcr.io/PROJECT_ID/smart-factory-backend:latest
        command: ["python", "-m", "app.services.sensor_simulator"]
        env:
        - name: KAFKA_BOOTSTRAP_SERVERS
          valueFrom:
            secretKeyRef:
              name: smart-factory-secrets
              key: KAFKA_BOOTSTRAP_SERVERS
              optional: true
        envFrom:
        - configMapRef:
            name: smart-factory-config
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"

 