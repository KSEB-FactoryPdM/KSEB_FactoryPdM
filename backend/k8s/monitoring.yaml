apiVersion: v1
kind: Service
metadata:
  name: prometheus
  namespace: smart-factory
  labels:
    app: prometheus
spec:
  ports:
  - port: 9090
    targetPort: 9090
    name: web
  selector:
    app: prometheus
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: prometheus
  namespace: smart-factory
  labels:
    app: prometheus
spec:
  replicas: 1
  selector:
    matchLabels:
      app: prometheus
  template:
    metadata:
      labels:
        app: prometheus
    spec:
      containers:
      - name: prometheus
        image: prom/prometheus:latest
        ports:
        - containerPort: 9090
        args:
        - '--config.file=/etc/prometheus/prometheus.yml'
        - '--storage.tsdb.path=/prometheus'
        - '--web.console.libraries=/etc/prometheus/console_libraries'
        - '--web.console.templates=/etc/prometheus/consoles'
        - '--storage.tsdb.retention.time=200h'
        - '--web.enable-lifecycle'
        volumeMounts:
        - name: prometheus-config
          mountPath: /etc/prometheus
        - name: prometheus-storage
          mountPath: /prometheus
        resources:
          requests:
            memory: "1Gi"
            cpu: "500m"
          limits:
            memory: "2Gi"
            cpu: "1000m"
      volumes:
      - name: prometheus-config
        configMap:
          name: prometheus-config
      - name: prometheus-storage
        emptyDir: {}

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: prometheus-config
  namespace: smart-factory
data:
  prometheus.yml: |
    global:
      scrape_interval: 15s
      evaluation_interval: 15s
    
    rule_files:
      # - "first_rules.yml"
      # - "second_rules.yml"
    
    scrape_configs:
      - job_name: 'prometheus'
        static_configs:
          - targets: ['localhost:9090']
      
      - job_name: 'smart-factory-backend'
        static_configs:
          - targets: ['smart-factory-backend:8000']
        metrics_path: '/metrics'
        scrape_interval: 30s
      
      - job_name: 'kubernetes-apiservers'
        kubernetes_sd_configs:
        - role: endpoints
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - source_labels: [__meta_kubernetes_namespace, __meta_kubernetes_service_name, __meta_kubernetes_endpoint_port_name]
          action: keep
          regex: default;kubernetes;https
      
      - job_name: 'kubernetes-nodes'
        kubernetes_sd_configs:
        - role: node
        scheme: https
        tls_config:
          ca_file: /var/run/secrets/kubernetes.io/serviceaccount/ca.crt
        bearer_token_file: /var/run/secrets/kubernetes.io/serviceaccount/token
        relabel_configs:
        - action: labelmap
          regex: __meta_kubernetes_node_label_(.+)
        - target_label: __address__
          replacement: kubernetes.default.svc:443
        - source_labels: [__meta_kubernetes_node_name]
          regex: (.+)
          target_label: __metrics_path__
          replacement: /api/v1/nodes/${1}/proxy/metrics

---
apiVersion: v1
kind: Service
metadata:
  name: grafana
  namespace: smart-factory
  labels:
    app: grafana
spec:
  ports:
  - port: 3000
    targetPort: 3000
    name: web
  selector:
    app: grafana
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: smart-factory
  labels:
    app: grafana
spec:
  replicas: 1
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      containers:
      - name: grafana
        image: grafana/grafana:10.4.7
        ports:
        - containerPort: 3000
        env:
        - name: GF_SECURITY_ADMIN_PASSWORD
          value: "admin"
        - name: GF_SECURITY_ALLOW_EMBEDDING
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ENABLED
          value: "true"
        - name: GF_AUTH_ANONYMOUS_ORG_ROLE
          value: "Viewer"
        envFrom:
        - secretRef:
            name: smart-factory-secrets
        volumeMounts:
        - name: grafana-storage
          mountPath: /var/lib/grafana
        - name: grafana-datasources
          mountPath: /etc/grafana/provisioning/datasources
        - name: grafana-dashboards
          mountPath: /etc/grafana/provisioning/dashboards
        resources:
          requests:
            memory: "512Mi"
            cpu: "250m"
          limits:
            memory: "1Gi"
            cpu: "500m"
      volumes:
      - name: grafana-storage
        emptyDir: {}
      - name: grafana-datasources
        configMap:
          name: grafana-datasources
      - name: grafana-dashboards
        configMap:
          name: grafana-dashboards

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-datasources
  namespace: smart-factory
data:
  datasource.yml: |
    apiVersion: 1
    datasources:
    - name: Prometheus
      type: prometheus
      access: proxy
      url: http://prometheus:9090
    - name: TimescaleDB
      uid: timescaledb-uid
      type: postgres
      access: proxy
      isDefault: true
      url: timescaledb:5432
      database: ${POSTGRES_DB}
      user: ${POSTGRES_USER}
      secureJsonData:
        password: ${POSTGRES_PASSWORD}
      jsonData:
        database: ${POSTGRES_DB}
        sslmode: disable
        postgresVersion: 1400
        timescaledb: true
        connMaxLifetime: 14400
        maxOpenConns: 100
        maxIdleConns: 100

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: grafana-dashboards
  namespace: smart-factory
data:
  dashboard.yml: |
    apiVersion: 1
    providers:
    - name: 'default'
      orgId: 1
      folder: ''
      type: file
      disableDeletion: false
      editable: true
      options:
        path: /etc/grafana/provisioning/dashboards
  smart-factory-dashboard.json: |
    {
      "id": null,
      "title": "실시간 센서 데이터 대시보드 (메인)",
      "tags": ["sensors", "realtime", "factory", "main"],
      "style": "dark",
      "timezone": "browser",
      "templating": {
        "list": [
          {
            "name": "device",
            "type": "query",
            "label": "Device",
            "datasource": {"type": "postgres", "uid": "timescaledb-uid"},
            "query": "SELECT DISTINCT device FROM sensor_data ORDER BY device",
            "refresh": 2,
            "includeAll": false,
            "multi": false,
            "current": {"text": "L-CAHU-01R", "value": "L-CAHU-01R"},
            "hide": 0,
            "sort": 0
          }
        ]
      },
      "panels": [
        {
          "id": 1,
          "title": "전류 센서 (x, y, z) - ${device}",
          "type": "timeseries",
          "gridPos": {"h": 10, "w": 12, "x": 0, "y": 0},
          "datasource": {"type": "postgres", "uid": "timescaledb-uid"},
          "targets": [
            {
              "refId": "A",
              "editorMode": "code",
              "format": "time_series",
              "rawQuery": true,
              "rawSql": "SELECT time, sensor_type as metric, value FROM sensor_data WHERE device = '${device}' AND sensor_type IN ('x', 'y', 'z') AND time > NOW() - INTERVAL '5 minutes' ORDER BY time"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "color": {"mode": "palette-classic"},
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "전류 (A)",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {"tooltip": false, "viz": false, "legend": false},
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 1,
                "pointSize": 5,
                "scaleDistribution": {"type": "linear"},
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {"group": "A", "mode": "none"},
                "thresholdsStyle": {"mode": "off"}
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {"color": "green", "value": null},
                  {"color": "red", "value": 80}
                ]
              },
              "unit": "short"
            },
            "overrides": [
              {"matcher": {"id": "byName", "options": "x"}, "properties": [{"id": "color", "value": {"fixedColor": "red", "mode": "fixed"}}]},
              {"matcher": {"id": "byName", "options": "y"}, "properties": [{"id": "color", "value": {"fixedColor": "green", "mode": "fixed"}}]},
              {"matcher": {"id": "byName", "options": "z"}, "properties": [{"id": "color", "value": {"fixedColor": "blue", "mode": "fixed"}}]}
            ]
          },
          "options": {
            "legend": {"calcs": ["mean", "lastNotNull"], "displayMode": "list", "placement": "bottom", "showLegend": true},
            "tooltip": {"mode": "multi", "sort": "none"}
          }
        },
        {
          "id": 2,
          "title": "진동 센서 - ${device}",
          "type": "timeseries",
          "gridPos": {"h": 10, "w": 12, "x": 12, "y": 0},
          "datasource": {"type": "postgres", "uid": "timescaledb-uid"},
          "targets": [
            {
              "refId": "A",
              "editorMode": "code",
              "format": "time_series",
              "rawQuery": true,
              "rawSql": "SELECT time, 'vibration' as metric, value FROM sensor_data WHERE device = '${device}' AND sensor_type = 'vibe' AND time > NOW() - INTERVAL '5 minutes' ORDER BY time"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "color": {"mode": "palette-classic"},
              "custom": {
                "axisBorderShow": false,
                "axisCenteredZero": false,
                "axisColorMode": "text",
                "axisLabel": "진동",
                "axisPlacement": "auto",
                "barAlignment": 0,
                "drawStyle": "line",
                "fillOpacity": 10,
                "gradientMode": "none",
                "hideFrom": {"tooltip": false, "viz": false, "legend": false},
                "insertNulls": false,
                "lineInterpolation": "linear",
                "lineWidth": 2,
                "pointSize": 5,
                "scaleDistribution": {"type": "linear"},
                "showPoints": "never",
                "spanNulls": false,
                "stacking": {"group": "A", "mode": "none"},
                "thresholdsStyle": {"mode": "off"}
              },
              "mappings": [],
              "thresholds": {
                "mode": "absolute",
                "steps": [
                  {"color": "green", "value": null},
                  {"color": "yellow", "value": 1.5},
                  {"color": "red", "value": 2}
                ]
              },
              "unit": "short"
            },
            "overrides": [
              {"matcher": {"id": "byName", "options": "vibration"}, "properties": [{"id": "color", "value": {"fixedColor": "purple", "mode": "fixed"}}]}
            ]
          },
          "options": {
            "legend": {"calcs": ["mean", "max", "lastNotNull"], "displayMode": "list", "placement": "bottom", "showLegend": true},
            "tooltip": {"mode": "multi", "sort": "none"}
          }
        },
        {
          "id": 3,
          "title": "모든 디바이스 현재 상태",
          "type": "table",
          "gridPos": {"h": 8, "w": 24, "x": 0, "y": 10},
          "datasource": {"type": "postgres", "uid": "timescaledb-uid"},
          "targets": [
            {
              "refId": "A",
              "editorMode": "code",
              "format": "table",
              "rawQuery": true,
              "rawSql": "SELECT device, sensor_type, ROUND(AVG(value)::numeric, 3) as avg_value, ROUND(MAX(value)::numeric, 3) as max_value, ROUND(MIN(value)::numeric, 3) as min_value, COUNT(*) as count FROM sensor_data WHERE time > NOW() - INTERVAL '5 minutes' GROUP BY device, sensor_type ORDER BY device, sensor_type"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "custom": {"align": "auto", "cellOptions": {"type": "auto"}, "inspect": false},
              "mappings": [],
              "thresholds": {"mode": "absolute", "steps": [{"color": "green", "value": null}, {"color": "red", "value": 80}]}
            },
            "overrides": [
              {"matcher": {"id": "byName", "options": "device"}, "properties": [{"id": "custom.width", "value": 150}]},
              {"matcher": {"id": "byName", "options": "sensor_type"}, "properties": [{"id": "custom.width", "value": 100}]}
            ]
          },
          "options": {"showHeader": true, "sortBy": [{"desc": false, "displayName": "device"}]}
        },
        {
          "id": 4,
          "title": "전체 디바이스 실시간 현황",
          "type": "timeseries",
          "gridPos": {"h": 10, "w": 24, "x": 0, "y": 18},
          "datasource": {"type": "postgres", "uid": "timescaledb-uid"},
          "targets": [
            {
              "refId": "A",
              "editorMode": "code",
              "format": "time_series",
              "rawQuery": true,
              "rawSql": "SELECT time, device || '_' || sensor_type as metric, value FROM sensor_data WHERE time > NOW() - INTERVAL '5 minutes' ORDER BY time"
            }
          ],
          "fieldConfig": {
            "defaults": {
              "color": {"mode": "palette-classic"},
              "custom": {"axisBorderShow": false, "axisCenteredZero": false, "axisColorMode": "text", "axisLabel": "", "axisPlacement": "auto", "barAlignment": 0, "drawStyle": "line", "fillOpacity": 5, "gradientMode": "none", "hideFrom": {"tooltip": false, "viz": false, "legend": false}, "insertNulls": false, "lineInterpolation": "linear", "lineWidth": 1, "pointSize": 5, "scaleDistribution": {"type": "linear"}, "showPoints": "never", "spanNulls": false, "stacking": {"group": "A", "mode": "none"}, "thresholdsStyle": {"mode": "off"}},
              "mappings": [],
              "thresholds": {"mode": "absolute", "steps": [{"color": "green", "value": null}]},
              "unit": "short"
            },
            "overrides": []
          },
          "options": {"legend": {"calcs": [], "displayMode": "list", "placement": "right", "showLegend": true}, "tooltip": {"mode": "multi", "sort": "none"}}
        }
      ],
      "time": {"from": "now-5m", "to": "now"},
      "refresh": "5s",
      "schemaVersion": 30,
      "version": 0
    }