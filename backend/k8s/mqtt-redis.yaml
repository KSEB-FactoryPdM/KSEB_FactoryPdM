apiVersion: v1
kind: Service
metadata:
  name: mqtt
  namespace: smart-factory
  labels:
    app: mqtt
spec:
  ports:
  - port: 1883
    targetPort: 1883
    name: mqtt
  - port: 9001
    targetPort: 9001
    name: websocket
  selector:
    app: mqtt
  type: LoadBalancer

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: mqtt
  namespace: smart-factory
  labels:
    app: mqtt
spec:
  replicas: 1
  selector:
    matchLabels:
      app: mqtt
  template:
    metadata:
      labels:
        app: mqtt
    spec:
      containers:
      - name: mqtt
        image: eclipse-mosquitto:latest
        ports:
        - containerPort: 1883
        - containerPort: 9001
        volumeMounts:
        - name: mosquitto-config
          mountPath: /mosquitto/config
        resources:
          requests:
            memory: "128Mi"
            cpu: "100m"
          limits:
            memory: "256Mi"
            cpu: "200m"
      volumes:
      - name: mosquitto-config
        configMap:
          name: mosquitto-config

---
apiVersion: v1
kind: ConfigMap
metadata:
  name: mosquitto-config
  namespace: smart-factory
data:
  mosquitto.conf: |
    listener 1883
    allow_anonymous true
    
    listener 9001
    protocol websockets
    allow_anonymous true
    
    log_dest stdout
    log_type error
    log_type warning
    log_type notice
    log_type information
    
    connection_messages true
    log_timestamp true

---
apiVersion: v1
kind: Service
metadata:
  name: redis
  namespace: smart-factory
  labels:
    app: redis
spec:
  ports:
  - port: 6379
    targetPort: 6379
    name: redis
  selector:
    app: redis

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis
  namespace: smart-factory
  labels:
    app: redis
spec:
  replicas: 1
  selector:
    matchLabels:
      app: redis
  template:
    metadata:
      labels:
        app: redis
    spec:
      containers:
      - name: redis
        image: redis:7-alpine
        ports:
        - containerPort: 6379
        args:
        - redis-server
        - --appendonly
        - "yes"
        - --maxmemory
        - "256mb"
        - --maxmemory-policy
        - "allkeys-lru"
        volumeMounts:
        - name: redis-storage
          mountPath: /data
        resources:
          requests:
            memory: "256Mi"
            cpu: "100m"
          limits:
            memory: "512Mi"
            cpu: "200m"
        livenessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 30
          periodSeconds: 10
        readinessProbe:
          tcpSocket:
            port: 6379
          initialDelaySeconds: 5
          periodSeconds: 5
      volumes:
      - name: redis-storage
        emptyDir: {} 